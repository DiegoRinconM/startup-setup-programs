2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
steps on what i need when i format my pc in order to start working again :
  download vsCode
  download postman
  download brave browser 


create a new ssh-key for github
  sudo apt update
    sudo apt install git -y
      git --version
        eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519
            ssh -T git@github.com
              git config --global user.name "Diego"
                git config --global user.email "diegormora@gmail.com"
                    cat ~/.ssh/id_ed25519.pub -- then go to gitgub and add the key we get when doing this command in the part that add new ssh-key




aws 
   sudo apt install awscli -y
      aws --version


at the root dir create a folder
  mkdir aws iniside that createa a aws config file with this info updating it in vscode 
  [sandbox-diego]
sso_session = sandbox-diego
sso_account_id = 214141866126
sso_role_name = AdministratorAccess
region = sa-east-1

[sso-session sandbox-diego]
sso_start_url = https://d-94671d1604.awsapps.com/start/#/?tab=accounts
sso_region = sa-east-1
sso_registration_scopes = sso:account:access

[profile diego-sandbox]
sso_session = sandbox-diego
sso_account_id = 214141866126
sso_role_name = AdministratorAccess
region = sa-east-1



then make another file insde the aws folder credential and open in vscode and put this with the access key of aws 
[sandbox-diego]
here goes the access key that you get from aws keys
the you do the sso login 

in the bashrc file you get there usimg code ~/.bashrc 
create the patput of github and remenber that the enviroment variables always goes with export 

and add the profile you are going to use most with aws so you dont have  to do --profile everytime you want to do something  
    export AWS_PROFILE=sandbox-diego



add this command so you can see the branch your working in git local repo   
    # Function to show current Git branch
parse_git_branch() {
  git rev-parse --abbrev-ref HEAD 2>/dev/null
}

# Bold everywhere: user@host, path, and branch
PS1='\[\e[1;32m\]\u@\h \[\e[1;34m\]\w\[\e[1;33m\]$(if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then echo " [$(parse_git_branch)]"; fi)\[\e[0m\]\n\$ '
